一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。


//动态规划，由第一次跳的层数对所有可能进行分类，然后相加得到结果
//f(n)为n层跳法
//f(1)=1;
// f(n) = f(n-1)+f(n-2)+...+f(1)+1;         为先跳1、2、3...n层之后剩余层数的跳法相加
//f(n)-f(n-1)=f(n-1);
//f(n) = 2*f(n-1）;

class Solution {
public:
    int jumpFloorII(int number) {
        return pow(2,number-1);
    }
};
