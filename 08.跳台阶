一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。

//动态规划，f(n)=f(1)f(n-1)+f(2)f(n-2),由第一步开始分为两类，第n层跳法为先跳1层之后的n-1层的跳法+先跳2层之后的n-2层跳法
斐波那契变形题，n层台阶跳法等于n-1层跳法+n-2层跳法

class Solution {
public:
    int jumpFloor(int number) {
    	int p=1,q=2;
        if(number<0) return 0;
        if(number == 1) return p;
        for(int i =2;i<number;++i){
            q += p;
            p = q-p;
        }
        return q;
}
