//简单遍历法
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
		for(int i =1; i<rotateArray.size();++i){
			if(rotateArray[i]<rotateArray[i-1]) return rotateArray[i];
		}
        return 0;
    }
};

//二分法
class Solution {
public:
    int minNumberInRotateArray(vector<int> rotateArray) {
    	if(rotateArray.empty()) return 0;
    	int j = rotateArray.size()-1 ;
        int i = 0;
        while(i<j-1){                       //判断要用t+1，注意不要越界
        	int t = (i+j)/2;
        	if(rotateArray[t+1] < rotateArray[t]) return rotateArray[t+1];
        	else if(rotateArray[t] < rotateArray[i])
        		j = t;
        	else if(rotateArray[t] > rotateArray[j])
        		i = t;	
        	else if(rotateArray[i] == rotateArray[j]){
                for(int t = i;t<j-2 ;++t){
                    if(rotateArray[t+1]<rotateArray[t]) return rotateArray[t+1];
                }
                return rotateArray[i];
			}
    
		}
		return 0;
    }
};

